- hosts: etcd
  become: True

  tasks:
    - name: "Setup host params"
      shell: ip -f inet addr show eth0 | sed -En -e 's/.*inet ([0-9.]+).*/\1/p'
      register: privateIP

- hosts: localhost
  gather_facts: False
  become: False
  tasks:
    - name: "Create ./etcd-certs directory to house keys and certificates"
      file:
        path: ./etcd-certs
        state: directory
        
    - name: "Generate private key for each member"
      openssl_privatekey:
        path: ./etcd-certs/{{item}}.key
        type: RSA
        size: 4096
        state: present
        force: True
      with_items: "{{ groups['etcd'] }}"

    - name: "Generate CSR for each member"
      openssl_csr:
        path: ./etcd-certs/{{item}}.csr
        privatekey_path: ./etcd-certs/{{item}}.key
        common_name: "{{item}}"
        key_usage:
          - digitalSignature
        extended_key_usage:
          - serverAuth
        subject_alt_name:
          - IP:{{ hostvars[item]['privateIP']['stdout']}}
          - IP:127.0.0.1
        force: True
      with_items: "{{ groups['etcd'] }}"
    
    - name: "Generate private key for CA"
      openssl_privatekey:
        path: ./etcd-certs/ca.key
        type: RSA
        size: 4096
        state: present
        force: True

    - name: "Generate CSR for CA"
      openssl_csr:
        path: ./etcd-certs/ca.csr
        privatekey_path: ./etcd-certs/ca.key
        common_name: ca
        organization_name: "Etcd CA"
        basic_constraints:
          - CA:TRUE
          - pathlen:1
        basic_constraints_critical: True
        key_usage:
          - keyCertSign
          - digitalSignature
        force: True

    - name: "Generate self-signed CA certificate"
      openssl_certificate:
        path: ./etcd-certs/ca.crt
        privatekey_path: ./etcd-certs/ca.key
        csr_path: ./etcd-certs/ca.csr
        provider: selfsigned
        force: True
  
    - name: "Generate an `etcd` member certificate signed with our own CA certificate"
      openssl_certificate:
        path: ./etcd-certs/{{item}}.crt
        csr_path: ./etcd-certs/{{item}}.csr
        ownca_path: ./etcd-certs/ca.crt
        ownca_privatekey_path: ./etcd-certs/ca.key
        provider: ownca
        force: True
      with_items: "{{ groups['etcd'] }}"


- hosts: etcd
  become: yes
  tasks:
    - name: Create etcd group
      group:
        name: "etcd"

    - name: Create etcd user
      user:
        name: "etcd"
        group: "etcd"
        home: /bin/false

    - name: "Create directory for etcd configuration"
      file:
        path: "{{ item }}"
        state: directory
        owner: etcd
        group: etcd
        mode: 0755
      with_items:
        - /etc/etcd
        - /etc/etcd/ssl

    - name: "Copy over the CA certificate"
      copy:
        src: ./etcd-certs/ca.crt
        remote_src: False
        dest: /etc/etcd/ssl/ca.crt
        owner: etcd
        group: etcd
        mode: 0644

    - name: "Copy over the `etcd` member certificate"
      copy:
        src: ./etcd-certs/{{inventory_hostname}}.crt
        remote_src: False
        dest: /etc/etcd/ssl/server.crt
        owner: etcd
        group: etcd
        mode: 0644

    - name: "Copy over the `etcd` member key"
      copy:
        src: ./etcd-certs/{{inventory_hostname}}.key
        remote_src: False
        dest: /etc/etcd/ssl/server.key
        owner: etcd
        group: etcd
        mode: 0600

- hosts: etcd
  become: True
  gather_facts: False

  pre_tasks:
    - wait_for_connection: {timeout: 300}
    - setup:

  tasks:
    - name: Install etcd
      ansible.builtin.import_role:
        name: igor_nikiforov.etcd
      vars:
        etcd_version: "3.4.13"
        etcd_config:
          name: "{{ ansible_facts.hostname }}"
          data-dir: "/var/lib/etcd/data"
          wal-dir: "/var/lib/etcd/wal"
          initial-advertise-peer-urls: "https://{{ ansible_facts.fqdn }}:2380"
          initial-cluster-token: "token"
          initial-cluster-state: "new"
          advertise-client-urls: "https://{{ ansible_facts.fqdn }}:2379"
          listen-client-urls: "https://{{ ansible_default_ipv4.address }}:2379,https://127.0.0.1:2379"
          listen-peer-urls: "https://{{ ansible_default_ipv4.address }}:2380"
          client-transport-security:
            trusted-ca-file: "{{ etcd_conf_dir }}/ssl/ca.crt"
            cert-file: "{{ etcd_conf_dir }}/ssl/server.crt"
            key-file: "{{ etcd_conf_dir }}/ssl/server.key"
          peer-transport-security:
            trusted-ca-file: "{{ etcd_conf_dir }}/ssl/ca.crt"
            cert-file: "{{ etcd_conf_dir }}/ssl/server.crt"
            key-file: "{{ etcd_conf_dir }}/ssl/server.key"
          log-level: "debug"
          logger: "zap"