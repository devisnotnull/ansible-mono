---
- hosts: proxmox
  gather_facts: False
  vars:
    id_list:
        - "{{ master_id }}"
        - "{{ node1_id }}"
        - "{{ node2_id }}"
        - "{{ node3_id }}"
        - "{{ node4_id }}"
        - "{{ node5_id }}"
    id_stg_list:
        - { id: "{{ master_id }}", stg: "{{ storage }}" }
        - { id: "{{ node1_id }}", stg: "{{ storage }}" }
        - { id: "{{ node2_id }}", stg: "{{ storage }}" }
        - { id: "{{ node3_id }}", stg: "{{ storage }}" }
        - { id: "{{ node4_id }}", stg: "{{ storage }}" }
        - { id: "{{ node5_id }}", stg: "{{ storage }}" }
  tasks:
      - name: Including the variables.
        include_vars:
            file: ../../vars.yml

      - name: Creating a resource pool.
        shell: pvesh create /pools -poolid "{{ resource_pool }}" --Comment "Kubernetes Cluster"
        ignore_errors: yes

      - name: Downloading the ubuntu qcow2 image.
        get_url:
            url: "{{ image }}"
            dest: "{{ image_download_location }}image.qcow2"

      - name: Creating the VMs.
        shell: >
            qm create {{ item.id }}
            --pool {{ resource_pool }}
            --ostype "l26"
            --name {{ item.hn }}
            --description "Kubernetes VM"
            --agent 1
            --cores {{ item.cpu }}
            --memory {{ item.mem }}
            --net0 "virtio,bridge={{ item.bridge }},tag=900"
            --ipconfig0 "gw={{ item.gw }},ip={{ item.ip }}{{ item.sn }}"
            --nameserver {{ item.ns }}
            --searchdomain {{ item.sd }}
            --sshkeys {{ ssh_key }}
        with_items:
            - { id: "{{ master_id }}", hn: "{{ master_hn }}", cpu: "{{ master_cpu }}", mem: "{{ master_mem }}", bridge: "{{ bridge }}", gw: "{{ gateway }}", ip: "{{ master_ip }}", sn: "{{ subnet }}", ns: "{{ dns }}", sd: "{{ domain }}" }
            - { id: "{{ node1_id }}", hn: "{{ node1_hn }}", cpu: "{{ minion_cpu }}", mem: "{{ minion_mem }}", bridge: "{{ bridge }}", gw: "{{ gateway }}", ip: "{{ node1_ip }}", sn: "{{ subnet }}", ns: "{{ dns }}", sd: "{{ domain }}" }
            - { id: "{{ node2_id }}", hn: "{{ node2_hn }}", cpu: "{{ minion_cpu }}", mem: "{{ minion_mem }}", bridge: "{{ bridge }}", gw: "{{ gateway }}", ip: "{{ node2_ip }}", sn: "{{ subnet }}", ns: "{{ dns }}", sd: "{{ domain }}" }
            - { id: "{{ node3_id }}", hn: "{{ node3_hn }}", cpu: "{{ minion_cpu }}", mem: "{{ minion_mem }}", bridge: "{{ bridge }}", gw: "{{ gateway }}", ip: "{{ node3_ip }}", sn: "{{ subnet }}", ns: "{{ dns }}", sd: "{{ domain }}" }
            - { id: "{{ node4_id }}", hn: "{{ node4_hn }}", cpu: "{{ minion_cpu }}", mem: "{{ minion_mem }}", bridge: "{{ bridge }}", gw: "{{ gateway }}", ip: "{{ node4_ip }}", sn: "{{ subnet }}", ns: "{{ dns }}", sd: "{{ domain }}" }
            - { id: "{{ node5_id }}", hn: "{{ node5_hn }}", cpu: "{{ minion_cpu }}", mem: "{{ minion_mem }}", bridge: "{{ bridge }}", gw: "{{ gateway }}", ip: "{{ node5_ip }}", sn: "{{ subnet }}", ns: "{{ dns }}", sd: "{{ domain }}" }

      - name: Importing the qcow2 image as a disk.
        shell: qm importdisk {{ item.id }} {{ image_download_location }}image.qcow2 {{ item.stg }}
        with_items: "{{ id_stg_list }}"

      - name: Configuring the VM Hardware.
        shell: qm set {{ item.id }}
               --cipassword password
               --scsihw virtio-scsi-pci
               --scsi0 {{ item.stg }}:vm-{{ item.id }}-disk-0
               --ide2 {{ item.stg }}:cloudinit
               --boot c --bootdisk scsi0
               --serial0 socket
               --onboot 1
        with_items: "{{ id_stg_list }}"

      - name: Resizing the disk.
        shell: qm resize {{ item.id }} scsi0 {{ item.size }}
        with_items:
            - { id: "{{ master_id }}", size: "{{ master_disk }}" }
            - { id: "{{ node1_id }}", size: "{{ minion_disk }}" }
            - { id: "{{ node2_id }}", size: "{{ minion_disk }}" }
            - { id: "{{ node3_id }}", size: "{{ minion_disk }}" }
            - { id: "{{ node4_id }}", size: "{{ minion_disk }}" }
            - { id: "{{ node5_id }}", size: "{{ minion_disk }}" }

      - name: Starting the VMs.
        shell: qm start {{ item }}
        with_items: "{{ id_list }}"

      - name: Waiting 2 minutes for for ubuntu to finish booting.
        pause:
            seconds: 120
